##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# this is required to proxy Grafana Live WebSocket connections.
map $http_upgrade $connection_upgrade {
	default upgrade;
	'' close;
}

upstream grafana {
	server localhost:3000;
}

server {
	listen 80 default_server;
	listen [::]:80 default_server;

	#root /var/www/html;

	#index index.html index.htm index.nginx-debian.html;

	server_name _;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		#try_files $uri $uri/ =404;

		# redirect to grafana
		return 301 http://$host/grafana;
	}

	# Proxy Grafana to sub path
	location /grafana/ {
		rewrite  ^/grafana/(.*)  /$1 break;
		proxy_set_header Host $http_host;
		proxy_pass http://grafana;
	}

	# Proxy Grafana Live WebSocket connections.
	location /grafana/api/live/ {
		rewrite  ^/grafana/(.*)  /$1 break;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
		proxy_set_header Host $http_host;
		proxy_pass http://grafana;
	}
}